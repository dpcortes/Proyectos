{
    "contents" : "\ninstall.packages(\"kernlab\")\nlibrary(kernlab)\ndata(\"spam\")\nstr(spam[, 1:5])\nset.seed(3435)\ntrainIndicator <- rbinom(4601, size = 1, prob = 0.5)\ntable(trainIndicator)\ntrainIndicator\n##0    1 \n##2314 2287 \ntrainSpam <- spam[trainIndicator== 1, ]\ntestSpam <- spam[trainIndicator== 0, ]\nnames(trainSpam)\n##[1] \"make\"              \"address\"           \"all\"               \"num3d\"             \"our\"              \n##[6] \"over\"              \"remove\"            \"internet\"          \"order\"             \"mail\"             \n##[11] \"receive\"           \"will\"              \"people\"            \"report\"            \"addresses\"        \n##[16] \"free\"              \"business\"          \"email\"             \"you\"               \"credit\"           \n##[21] \"your\"              \"font\"              \"num000\"            \"money\"             \"hp\"               \n##[26] \"hpl\"               \"george\"            \"num650\"            \"lab\"               \"labs\"             \n##[31] \"telnet\"            \"num857\"            \"data\"              \"num415\"            \"num85\"            \n##[36] \"technology\"        \"num1999\"           \"parts\"             \"pm\"                \"direct\"           \n##[41] \"cs\"                \"meeting\"           \"original\"          \"project\"           \"re\"               \n##[46] \"edu\"               \"table\"             \"conference\"        \"charSemicolon\"     \"charRoundbracket\" ##\n##[51] \"charSquarebracket\" \"charExclamation\"   \"charDollar\"        \"charHash\"          \"capitalAve\"       \n##[56] \"capitalLong\"       \"capitalTotal\"      \"type\"             \nhead(trainSpam)\ntable(trainSpam$type)\nplot(trainSpam$capitalAve ~ trainSpam$type)\nplot(log10(trainSpam$capitalAve + 1) ~ trainSpam$type)\nplot(log10(trainSpam[, 1:4]+ 1))\nhCluster <- hclust(dist(t(trainSpam[ , 1:57])))\nhClusterUpdated = hclust(dist(t(log10(trainSpam[ , 1:55]+ 1))))\nplot(hClusterUpdated)\ntrainSpam$numType = as.numeric(trainSpam$type) - 1\ncostFunction = function(x,y) sum(x!= (y > 0.5))\ncvError = rep(NA, 55)\nlibrary(boot)\nfor(i in 1:55){\n  lmFormula = reformulate(names(trainSpam)[i], response = \"numType\")\n  gmlFit = glm(lmFormula, family = \"binomial\", data = trainSpam)\n  cvError[i] = cv.glm(trainSpam, gmlFit, costFunction, 2)$delta[2]\n}\n##Which predictor has minimun cross-validated error\nnames(trainSpam)[which.min(cvError)]\n##[1] \"charDollar\"\n##Use the best model from the group\npredictionModel = glm(numType ~ charDollar, family = \"binomial\", data = trainSpam)\n##Get predictions on the test set\npredictionTest = predict(predictionModel, testSpam)\npredictedSpam = predict(predictionModel, testSpam)\npredictedSpam = rep(\"nonspam\", dim(testSpam)[1])\n##Clasify as spam for those with prob >0.5\npredictedSpam[predictionModel$fitted > 0.5] = \"spam\"\n##Clasification table\ntable(predictedSpam, testSpam$type)\n##predictedSpam nonspam spam\n##nonspam    1346  458\n##spam         61  449\n##Error Rate\n(61+458)/(1346+61+458+449)\n##[1] 0.2242869\n\n\nv1 <- data.frame(typo=c(1,1,1,1,1,2,2,2,2,2,3,3,3,3,3), rnorm(15))",
    "created" : 1444779018324.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3794395904",
    "id" : "935A0A82",
    "lastKnownWriteTime" : 1445112651,
    "path" : "C:/Users/dpcortes/Desktop/Yo/R/Reproducible Research/Proyectos/Semana1.R",
    "project_path" : "Semana1.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}